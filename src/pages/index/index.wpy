<template>
  <view class="container">
      <view class="test">{{name}}</view>
      <view>{{newName}}</view>
      <button class="zan-btn" @tap="showToast">
        显示toast
      </button>
      <repeat for="{{list}}" key="index" index="index" item="item">
        <view @tap="makeEvent({{item.id}}, {{item.name}})">{{item.id}}{{item.name}}</view>
      </repeat>
      <button type="default" @tap="changeList">改变数据</button>
      <button type="default" @tap="changeUrl">js跳转页面</button>
      <navigator url="/pages/user/user">跳转到新页面</navigator>
      <list></list>

      <!-- Field 基础用法 -->
      <view class="zan-panel-title">基础用法</view>
     

      <form bindsubmit="formSubmit" bindreset="formReset">
        <view class="zan-panel">
            <zanField1 :options="base_name" :value="value" componentId="zanField1"></zanField1>
            <zanField2 :options="base_tel" :value="value" componentId="zanField2"></zanField2>
            <zanField3 :options="base_address" :value="value" componentId="zanField3"></zanField3>
          <view class="zan-btns">
            <button
              class="zan-btn zan-btn--primary"
              formType="submit">提交数据</button>
            <button
              class="zan-btn"
              formType="reset">重置数据</button>
          </view>
        </view>
      </form>

      <zanToast></zanToast>
  </view>
</template>
<style lang="css" src="./index.css"></style>
<script>
  import wepy from 'wepy'
  import List from '../../components/list/list'
  import TestMixin from '../../mixins/test'
  import zanToast from '../../components/zanui/components/zan-toast'

  import zanField from '../../components/zanui/components/zan-field'


  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页'
    }
    components = {
      list: List,
      zanToast,

      zanField1: zanField,
      zanField2: zanField,
      zanField3: zanField,
    }
    data = {
      name: '小五',
      list: [{id: 1000, name: '列表名称'}],
      foo: 'index foo',

      base_name: {
        title: '收货人',
        placeholder: '名字'
      },
      base_tel: {
        error: true,
        title: '联系电话',
        inputType: 'number',
        placeholder: '请输入手机号'
      },
      base_address: {
        title: '详细地址',
        type: 'textarea',
        placeholder: '请输入详细地址'
      },
    }

    computed = {
      newName(){
        const that = this
        return `${that.name}${+new Date()}`
      }
    }

    getData() {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          const result = [{id: 3, name: 'qh'}]
          resolve(result)
        }, 2000)
      })
    }

    mixins = [TestMixin]

    methods = {
      /**
       * 提交与重置
       */
      formSubmit(event) {
        console.log('[zan:field:submit]', event.detail.value)
      },

      formReset(event) {
        console.log('[zan:field:reset]', event)
      },
      /**
       * zanui
       */
      showToast() {
        this.$invoke('zanToast', 'showZanToast', { title: '提示内容提示内容受到粉丝的是的', timeout: 2000 })
      },
      /**
       * 异步需要$apply
       */
      async changeList() {

        wepy.request({
          method: 'post',
          url: 'https://easy-mock.com/mock/5949c76c8ac26d795f4195fb/example/user',
          data: {
            x: '123',
            y: '456',
            obj: [{
              id: '1'
            }]
          },
          header: {
              'content-type': 'application/x-www-form-urlencoded' // 默认值
          }
        }).then((d) => console.log(d))

        const that = this
        that.name = '王青'
        that.list = await that.getData()
        that.$apply()
      },
      /**
       * 测试事件传参
       */
      makeEvent(id, name) {
        console.log(this.$parent)
        console.log(id, name)
      },
      /**
       * 跳转页面
       */
      changeUrl() {
        wepy.navigateTo({
          url: '/pages/user/user'
        })
      }
    }

    events = {

    }

    async onLoad() {
      const that = this
      
      console.log('index')
      console.log(that.foo)
    }
  }
</script>
